Routes for API, comments (#) indicate that the HTTP verb is not used, (*) indicates something is unimplemented

A couple caveats:
  1 - feeds only pull in slides... i imagine this may need to change in the future
  2 - *** Comments are marked inappropriate by comments#update {:inappropriate => true} and this needs to be changed ***
  3 - not sure how images (SVG files) are uploaded (multi-part POST to SlidesController?)


Adding a Slide to a Round (first requires RoundLock)
  POST /api/rounds/:round_id/round_lock # user derived from session
  POST /api/rounds/:round_id/sentences {:sentence => {...}} 
    OR
  POST /api/rounds/:round_id/picuturs  {:picture => {...}} 

Watching a Round that is locked
  GET  /api/rounds/:round_id/round_lock # check for lock
  POST /api/rounds/:round_id/round_lock/watchings 


  ***** WHERE DO COMPLETED ROUND FEEDS GO? *****
  ***** WHERE DO INVITATION FEEDS GO? *****


IMPLEMENTED

  (Slide) Feeds, all can be passed ?time=[time] to fetch rows before that time
    GET /api/sentences
    * GET /api/sentences/private
      GET /api/sentences/friends
      GET /api/sentences/community
    GET /api/pictures
    * GET /api/pictures/private
      GET /api/pictures/friends
      GET /api/pictures/community
  * GET /api/me
      GET /api/rounds
      GET /api/slides
      GET /api/comments

  Rounds 
    C POST    /api/rounds/
    R GET     /api/rounds/:id
  # U PUT     /api/rounds/:id
    D DELETE  /api/rounds/:id
    I GET     /api/rounds/ # NOTE: this is for rounds for current user

    RoundLocks
      C POST    /api/rounds/:round_id/round_lock/
      R GET     /api/rounds/:round_id/round_lock/
    # U PUT     /api/rounds/:round_id/round_lock/
      D DELETE  /api/rounds/:round_id/round_lock/

      Watchings
        C POST    /api/rounds/:round_id/round_lock/watching
      # R GET     /api/rounds/:round_id/round_lock/watching
      # U PUT     /api/rounds/:round_id/round_lock/watching
      # D DELETE  /api/rounds/:round_id/round_lock/watching
    
    Slides, round_id and type ('Sentence' or 'Picture') required for create and index
      Sentences
        C POST    /api/rounds/:round_id/sentences/
      Pictures
        C POST    /api/rounds/:round_id/pictures/

      C POST    /api/rounds/:round_id/slides/?type=:type
      R GET     /api/rounds/:round_id/slides/:id
      U PUT     /api/rounds/:round_id/slides/:id
      D DELETE  /api/rounds/:round_id/slides/:id
      I GET     /api/rounds/:round_id/slides/?type=:type

      C POST    /api/slides/?round_id=:round_id&type=:type
      R GET     /api/slides/:id
      U PUT     /api/slides/:id
      D DELETE  /api/slides/:id
      I GET     /api/slides/?round_id=:round_id&type=:type

      Comments, slide_id required for create and index
        C POST    /api/slides/:slide_id/comments/
      # R GET     /api/slides/:slide_id/comments/:id
        U PUT     /api/slides/:slide_id/comments/:id
        D DELETE  /api/slides/:slide_id/comments/:id
        I GET     /api/slides/:slide_id/comments/

        C POST    /api/comments/?slide_id=:slide_id
      # R GET     /api/comments/:id
        U PUT     /api/comments/:id
        D DELETE  /api/comments/:id
        I GET     /api/comments/?slide_id=:slide_id

      Ballots, :vote must be an integer between 1 and 5
        C POST    /api/slides/:slide_id/votes/:vote

  BlacklistEntries (current user is derived from session)
    C POST    /api/providers/:provider/users/:uid/block/
    D DELETE  /api/providers/:provider/users/:uid/block/

  Resources belonging to the current user:
    NOTE: these return the 8 most recent, client can request older and new by id # unimplemented
    Rounds 
      I GET     /api/rounds/
    Slides
      I GET     /api/slides/
    Comments
      I GET     /api/comments/
    Ballots
      I GET     /api/ballots/
    Watchings
      I GET     /api/watchings/
    Invitations
      I GET     /api/invitations/

  Resources belonging to user identified by provider/uid (e.g. provider='facebook'):
    NOTE: these return the 8 most recent, client can request older and new by id # unimplemented
    Rounds 
      I GET     /api/providers/:provider/users/:uid/rounds/
      I GET     /api/users/:user_id/rounds/
    Slides
      I GET     /api/providers/:provider/users/:uid/slides/
      I GET     /api/users/:user_id/slides/
    Comments
      I GET     /api/providers/:provider/users/:uid/comments/
      I GET     /api/users/:user_id/comments/
    Ballots
      I GET     /api/providers/:provider/users/:uid/ballots/
      I GET     /api/users/:user_id/ballots/


WORKING ON THE FOLLOWING

  Resources belonging to the current user:
    NOTE: these return the 8 most recent, client can request older and new by id # unimplemented
    ALL
      I GET     /api/me

  Resources belonging to user identified by provider/uid (e.g. provider='facebook'):
    NOTE: these return the 8 most recent, client can request older and new by id # unimplemented
    ALL
      I GET     /api/providers/:provider/users/:uid/ # ???
      I GET     /api/users/:user_id/                 # ???

  Invitations - THESE ROUTES MAY BE CHANGING
    C POST    /api/rounds/:round_id/invitations/?provider=...&uid=...
  # R GET     /api/rounds/:round_id/invitations/
  # U PUT     /api/rounds/:round_id/invitations/
    D DELETE  /api/rounds/:round_id/invitations/:id
    I GET     /api/rounds/:round_id/invitations/
      
UNIMPLEMENTED

  Users
    Feeds - optional param 'time' (otherwise returns most recent)
      GET   /api/users/activity # only the activity for current_user
      GET   /api/users/whats_hot
