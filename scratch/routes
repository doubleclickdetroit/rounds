Routes for API, comments (#) indicate that the HTTP verb is not used

A couple caveats:
  1 - feeds only pull in slides... i imagine this may need to change in the future
  2 - Comments are marked inappropriate by comments#update {:inappropriate => true} ?
  3 - not sure how images (SVG files) are uploaded (multi-part POST to SlidesController?)


Adding a Slide to a Round (first requires RoundLock)
  POST /api/round_locks/1 {}
    RoundLock.find_or_create(:round_id => 1, :fid => 123)
  POST /api/rounds/1/slides {:sentence => {...}}
    lock = RoundLock.find(:round_id => 1, :fid => 123)
    Slide.create params[:sentence]
    lock.destroy

Watching a Round that is locked
  POST /api/round_locks/1 # where 1 is the round_id
    lock = RoundLock.find_or_create(:round_id => 1, :fid => 123)
    respond_with lock.to_json
  POST /api/round_locks/1/watching
    Watching.create(:round_id => 1, :fid => 123)


IMPLEMENTED

  (Slide) Feeds
    GET /api/sentences
    * GET /api/sentences/invitations
    * GET /api/sentences/private
      GET /api/sentences/friends
      GET /api/sentences/recent
    GET /api/pictures
    * GET /api/pictures/invitations
    * GET /api/pictures/private
      GET /api/pictures/friends
      GET /api/pictures/recent

  Rounds 
    C POST    /api/rounds/
    R GET     /api/rounds/:id
    U PUT     /api/rounds/:id
    D DELETE  /api/rounds/:id
  # I GET     /api/rounds/

    Slides, round_id and type ('Sentence' or 'Picture') required for create and index
      Sentences
        C POST    /api/rounds/:round_id/sentences/
      Pictures
        C POST    /api/rounds/:round_id/pictures/

      C POST    /api/rounds/:round_id/slides/?type=:type
      R GET     /api/rounds/:round_id/slides/:id
      U PUT     /api/rounds/:round_id/slides/:id
      D DELETE  /api/rounds/:round_id/slides/:id
      I GET     /api/rounds/:round_id/slides/?type=:type

      C POST    /api/slides/?round_id=:round_id&type=:type
      R GET     /api/slides/:id
      U PUT     /api/slides/:id
      D DELETE  /api/slides/:id
      I GET     /api/slides/?round_id=:round_id&type=:type

      Comments, slide_id required for create and index
        C POST    /api/slides/:slide_id/comments/
      # R GET     /api/slides/:slide_id/comments/:id
        U PUT     /api/slides/:slide_id/comments/:id
        D DELETE  /api/slides/:slide_id/comments/:id
        I GET     /api/slides/:slide_id/comments/

        C POST    /api/comments/?slide_id=:slide_id
      # R GET     /api/comments/:id
        U PUT     /api/comments/:id
        D DELETE  /api/comments/:id
        I GET     /api/comments/?slide_id=:slide_id

      Watchings, slide_id and fid required, fid inferred from current_user
        C POST    /api/slides/:slide_id/watchings
        D DELETE  /api/slides/:slide_id/watchings

  BlacklistEntries, :fid is being blocked by current_user
    C POST    /api/users/block/:fid
    D DELETE  /api/users/unblock/:fid

  Users - dump from `rake routes`, extra detail can be added as needed
    GET     /api/users/sign_in(.:format)        devise/sessions#new
    POST    /api/users/sign_in(.:format)        devise/sessions#create
    DELETE  /api/users/sign_out(.:format)       devise/sessions#destroy
    POST    /api/users/password(.:format)       devise/passwords#create
    GET     /api/users/password/new(.:format)   devise/passwords#new
    GET     /api/users/password/edit(.:format)  devise/passwords#edit
    PUT     /api/users/password(.:format)       devise/passwords#update
    GET     /api/users/cancel(.:format)         devise/registrations#cancel
    POST    /api/users(.:format)                devise/registrations#create
    GET     /api/users/sign_up(.:format)        devise/registrations#new
    GET     /api/users/edit(.:format)           devise/registrations#edit
    PUT     /api/users(.:format)                devise/registrations#update
    DELETE  /api/users(.:format)                devise/registrations#destroy


UNIMPLEMENTED

  Users
    Feeds - optional param 'time' (otherwise returns most recent)
      GET   /api/users/activity # only the activity for current_user
      GET   /api/users/whats_hot

  Invitations
